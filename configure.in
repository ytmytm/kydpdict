
AC_PREREQ(2.57)
AC_INIT(kydpdict, 0.6.0, ytm@elysium.pl)

AC_PROG_CPP
AC_PROG_CC
AC_PROG_CXX
AC_PROG_CXXCPP
AC_PROG_MAKE_SET
AC_PATH_XTRA
AC_C_BIGENDIAN( AC_SUBST(CXXFLAGS,"$CXXFLAGS -DWORDS_BIGENDIAN") )

QT_DO_IT_ALL

if test x"$no_x" = "xyes"; then
    AC_SUBST(CXXFLAGS,"$CXXFLAGS -DWITHOUT_X11")
    AC_SUBST(HAVE_X11,"no")
else
    AC_SUBST(HAVE_X11,"yes")
    AC_SUBST(X_LIB,"-lX11")
fi

if test x"$qt_cv_libraries" = "x"; then
    AC_MSG_ERROR([you have to provide both --with-qt-includes and --with-qt-libraries])
fi

if test -n "$qt_cv_dir"; then
    QTDIR=$qt_cv_dir
fi

# Required Qt version
QTMAJOR=3
QTMIDDLE=1
QTMINOR=0

aIFS=$IFS
IFS=.
CNT=1
FAULT=0
for NAME in $QT_VERSION; do
    case $CNT in
	1)
	    if test 0$NAME -lt $QTMAJOR; then
		FAULT=1
	    fi
	    ;;
	2)
	    if test 0$NAME -lt $QTMIDDLE; then
		FAULT=1
	    fi
	    ;;
	3)
	    if test 0$NAME -lt $QTMINOR; then
		FAULT=1
	    fi
	    ;;
    esac
    CNT=`expr $CNT + 1`
done
IFS=$aIFS

if test 0$FAULT -eq 1; then
    AC_MSG_ERROR([found Qt $QT_VERSION, Qt >= $QTMAJOR.$QTMIDDLE required])
fi

AC_ARG_VAR(LUPDATE,[path to Qt lupdate tool])
AC_CHECK_PROG([LUPDATE],[lupdate],[found],[notfound],[$PATH:$QTDIR/bin:/usr/X11R6/bin:/usr/bin:/usr/local/bin:/usr/local/qt/bin])
if test "$LUPDATE" = "notfound"; then
    AC_MSG_ERROR([lupdate not found. Please check if it is in your PATH or set LUPDATE variable])
fi
AC_PATH_PROG([LUPDATE],[lupdate],[/usr/bin/lupdate],[$PATH:$QTDIR/bin:/usr/X11R6/bin:/usr/bin:/usr/local/bin:/usr/local/qt/bin])

AC_ARG_VAR(LRELEASE,[path to Qt lrelease tool])
AC_CHECK_PROG([LRELEASE],[lrelease],[found],[notfound],[$PATH:$QTDIR/bin:/usr/X11R6/bin:/usr/bin:/usr/local/bin:/usr/local/qt/bin])
if test "$LRELEASE" = "notfound"; then
    AC_MSG_ERROR([lrelease not found. Please check if it is in your PATH or set LRELEASE variable])
fi
AC_PATH_PROG([LRELEASE],[lrelease],[/usr/bin/lrelease],[$PATH:$QTDIR/bin:/usr/X11R6/bin:/usr/bin:/usr/local/bin:/usr/local/qt/bin])

AC_OUTPUT([
Makefile
src/Makefile
])
